// Type definitions for Elm
// Project: https://github.com/dillonkearns/elm-typescript
// Definitions by: Dillon Kearns <https://github.com/dillonkearns>
export as namespace Elm


export interface App {
  ports: {
    generatedFiles: {
      subscribe(callback: (data: string) => void): void
    }
    parsingError: {
      subscribe(callback: (data: string) => void): void
    }
    inbound: {
      send(data: number): void
    }
    getMaybe: {
      send(data: boolean | null): void
    }
    sendTuple: {
      subscribe(callback: (data: [string, number, number] | null) => void): void
    }
    outgoingList: {
      subscribe(callback: (data: [number, number][]) => void): void
    }
    outgoingArray: {
      subscribe(callback: (data: string[]) => void): void
    }
    outgoingRecord: {
      subscribe(callback: (data: { id: number; username: string; avatarUrl: string }) => void): void
    }
    outgoingJsonValues: {
      subscribe(callback: (data: any[]) => void): void
    }
    incomingJsonValue: {
      send(data: any): void
    }
    emptyIncomingMessage: {
      send(data: null): void
    }
    outgoingBoolAlias: {
      subscribe(callback: (data: boolean) => void): void
    }
  }
}
    

export namespace Main {
  export function fullscreen(flags: { elmModuleFileContents: string }): App
  export function embed(node: HTMLElement | null, flags: { elmModuleFileContents: string }): App
}
